name: Build and Push Modular Docker Images

on:
  push:
    branches: ['**']
    paths:
      - '**'
      - '!docker-compose.prod.yml'
      - '!Dockerfile.unified'
      - '!supervisord.conf'
      - '!entrypoint.sh'

jobs:
  build-and-push-modular:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME || github.actor }}
          password: ${{ secrets.CR_PAT || github.token }}

      - name: Set up environment
        id: env
        run: |
          # Clean up branch name for use in tags (lowercase, replace special chars)
          BRANCH_NAME=$(echo ${{ github.ref_name }} | tr '/' '-' | tr '.' '-' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9.-]//g')
          REPO_OWNER=$(echo "${{ secrets.GHCR_USERNAME || github.actor }}" | tr '[:upper:]' '[:lower:]')
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo "IMAGE_PREFIX=ghcr.io/$REPO_OWNER/adk-starter" >> $GITHUB_ENV
          echo "IMAGE_TAG=$BRANCH_NAME" >> $GITHUB_ENV
          
          # Also set tag for default branch as 'latest'
          if [ "${{ github.ref_name }}" = "${{ github.event.repository.default_branch }}" ]; then
            echo "IS_DEFAULT_BRANCH=true" >> $GITHUB_ENV
          else
            echo "IS_DEFAULT_BRANCH=false" >> $GITHUB_ENV
          fi

      - name: Build and push service-api
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./service.Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/service-api:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_PREFIX }}/service-api:latest,enable=${{ env.IS_DEFAULT_BRANCH == 'true' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push agent-api
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./agents/agents.Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/agent-api:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_PREFIX }}/agent-api:latest,enable=${{ env.IS_DEFAULT_BRANCH == 'true' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Output image information
        run: |
          echo "Successfully built and pushed:"
          echo "- ${{ env.IMAGE_PREFIX }}/service-api:${{ env.IMAGE_TAG }}"
          echo "- ${{ env.IMAGE_PREFIX }}/agent-api:${{ env.IMAGE_TAG }}"
